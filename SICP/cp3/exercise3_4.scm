#lang sicp

(define (make-account balance password)
  (let ((counter 0))
    (define (with-draw amount)
      (if (>= balance amount)
          (begin (set! balance (- balance amount))
                balance)
          (error "Insufficient funds")))
    (define (deposit amount)
      (set! balance (+ balance amount))
      balance)
    (define (correct-password? given-password)
      (eq? given-password password))
    (define (wrong-password amount)
        (display "Incorrect password")
        (newline))
    (define (call-the-cops amount)
      (display "Call the cops")
      (newline))
    (define (dispatch user-input-pass m)
      (if (correct-password? user-input-pass)
        (cond ((eq? m 'with-draw) (begin (set! counter 0) with-draw))
              ((eq? m 'deposit) (begin (set! counter 0) deposit))
              (else (error "Unknown request -- MAKE-ACCOUNT" m)))
        (if (>= counter 6)
            (begin (set! counter 0)
                    call-the-cops)
            (begin (set! counter (inc counter))
                    wrong-password))))
    dispatch))

(define acc (make-account 100 'secret-password))
((acc 'secret-password 'with-draw) 40)
((acc 'some-other-password 'deposit) 50)
((acc 'secret-password 'with-draw) 40)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)